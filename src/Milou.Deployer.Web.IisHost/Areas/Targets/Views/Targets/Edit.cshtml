@using Arbor.App.Extensions
@using Milou.Deployer.Core.Deployment
@using Milou.Deployer.Web.Core.Deployment
@using Milou.Deployer.Web.Core.Html
@using Milou.Deployer.Web.IisHost.Areas.Targets.Controllers
@using Milou.Deployer.Web.IisHost.AspNetCore.TempData
@model Milou.Deployer.Web.IisHost.Areas.Targets.Views.EditTargetViewOutputModel
@{
    var result = TempData.Get<ITargetResult>();
}

@if (result is {TargetName: {}})
{
    <h2>Saved @result.TargetName</h2>
}

<h1>Edit target @Model.DeploymentTarget.Name</h1>

@if (Model.DeploymentTarget.Id.Equals(Constants.NotAvailable))
{
    <h2>Target <span>@Model.DeploymentTarget.Id</span> could not be loaded</h2>
}
else
{
    <form action="@Url.RouteUrl(TargetConstants.RemoveTargetPostRouteName)" method="post">

        <fieldset>
            <legend>Actions</legend>

            <input type="hidden" name="deploymentTargetId" value="@Model.DeploymentTarget.Id" />

            <div class="input-field">
                <input type="submit" value="Remove" />
            </div>

        </fieldset>

    </form>

    <form method="post" action="@Url.RouteUrl(TargetConstants.EditTargetPostRouteName)">

        <fieldset>
            <legend>General settings</legend>
            <div class="input-field">
                <label for="target-id">ID</label><div class="input-value">
                    <input id="target-id" type="text" name="id" readonly="readonly" required="required" value="@Model.DeploymentTarget.Id" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-name">Name</label><div class="input-value">
                    <input id="target-name" type="text" name="name" readonly="readonly" value="@Model.DeploymentTarget.Name" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-url">URL</label><div class="input-value">
                    <input id="target-url" type="text" name="url" value="@Model.DeploymentTarget.Url" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-metadataTimeout">Metadata timeout</label>
                <div class="input-value">
                    <input id="target-metadataTimeout" type="text" name="metadataTimeout" value="@Model.DeploymentTarget.MetadataTimeout?.ToString()" />
                </div>
            </div>

        </fieldset>

        <fieldset>
            <legend>Deployment settings</legend>
            <div class="input-field">
                <label for="target-allowExplicitPreRelease">Force allow pre-releases</label>
                <div class="input-value">
                    <input id="target-allowExplicitPreRelease" type="checkbox" name="allowExplicitPreRelease" @Model.DeploymentTarget.AllowExplicitExplicitPreRelease.Checked() />
                </div>
            </div>
            <div class="input-field">
                <label for="target-autoDeployEnabled">Auto-deploy enabled</label>
                <div class="input-value">
                    <input id="target-autoDeployEnabled" type="checkbox" name="autoDeployEnabled" @Model.DeploymentTarget.AutoDeployEnabled.Checked() />
                </div>
            </div>

            <div class="input-field">
                <label for="target-packageId">Allowed package name</label>
                <div class="input-value">
                    <input id="target-packageId" type="text" name="packageId" value="@Model.DeploymentTarget.PackageId" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-packageListPrefixEnabled">Package list prefix enabled</label>
                <div class="input-value">
                    <input id="target-packageListPrefixEnabled" type="checkbox" name="packageListPrefixEnabled" @Model.DeploymentTarget.PackageListPrefixEnabled.Checked() />
                </div>
            </div>

            <div class="input-field">
                <label for="target-packageListPrefix">Package list prefix</label>
                <div class="input-value">
                    <input id="target-packageListPrefix" type="text" name="packageListPrefix" value="@Model.DeploymentTarget.PackageListPrefix" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-targetDirectory">Local target directory</label>
                <div class="input-value">
                    <input id="target-targetDirectory" type="text" name="targetDirectory" value="@Model.DeploymentTarget.TargetDirectory" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-webConfigTransform">Web.config transformation file</label>
                <div class="input-value">
                    <input id="target-webConfigTransform" type="text" name="webConfigTransform" value="@Model.DeploymentTarget.WebConfigTransform" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-excludedFilePatterns">Excluded file patterns</label>
                <div class="input-value">
                    <input id="target-excludedFilePatterns" type="text" name="excludedFilePatterns" value="@Model.DeploymentTarget.ExcludedFilePatterns" />
                </div>
            </div>

        </fieldset>

        <fieldset>

            <legend>IIS Settings</legend>

            <div class="input-field">
                <label for="target-iisSiteName">IIS site name</label>
                <div class="input-value">
                    <input id="target-iisSiteName" type="text" name="iisSiteName" value="@Model.DeploymentTarget.IisSiteName" />
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>NuGet settings</legend>
            <div class="input-field">
                <label for="target-nugetConfigFile">NuGet config file</label>
                <div class="input-value">
                    <input id="target-nugetConfigFile" type="text" name="nugetConfigFile" value="@Model.DeploymentTarget.NuGet.NuGetConfigFile" />
                </div>
            </div>

            <div class="input-field">
                <label for="target-nugetPackageSource">NuGet package source</label>
                <div class="input-value">
                    <input id="target-nugetPackageSource" type="text" name="nugetPackageSource" value="@Model.DeploymentTarget.NuGet.NuGetPackageSource" />
                </div>
            </div>
            <div class="input-field">
                <label for="target-packageListTimeout">Timeout</label>
                <div class="input-value">
                    <input id="target-packageListTimeout" type="text" name="packageListTimeout" value="@Model.DeploymentTarget.NuGet.PackageListTimeout?.ToString()" />
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Publish options</legend>
            <div class="input-field">
                <label for="target-publishSettingsXml">Publish settings XML</label>
                <div class="input-value">
                    <textarea id="target-publishSettingsXml" type="text" name="publishSettingsXml">@Model.DeploymentTarget.PublishSettingsXml</textarea>
                </div>
            </div>

            <div class="input-field">
                <label for="publishType">Publish type</label>
                <div class="input-value">
                    <select name="publishType" id="publishType">
                        @foreach (var item in PublishType.All)
                        {
                            <option value="@item.Name" @((Model.DeploymentTarget.PublishType == item).Selected())>@item.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="input-field">
                <label for="ftpPath">FTP path</label>
                <div class="input-value">
                    <input name="ftpPath" id="ftpPath" value="@Model.DeploymentTarget.FtpPathValue" />
                </div>
            </div>

        </fieldset>

        <fieldset>
            <legend>Environment</legend>

            <div class="input-field">

                <label for="environmentType">Environment type</label>
                <div class="input-value">
                    <select name="environmentTypeId" id="environmentTypeId">

                        @if (Model.DeploymentTarget.EnvironmentTypeId is null)
                        {
                            <option value="" @true.Selected()>@EnvironmentType.Unknown.Name</option>
                        }

                        @foreach (var type in Model.EnvironmentTypes.OrderBy(environment => environment.Name))
                        {
                            <option value="@type.Id" @((Model.DeploymentTarget.EnvironmentTypeId?.Equals(type.Id) ?? false).Selected())>@type.Name</option>
                        }

                    </select>
                </div>

            </div>

            <div class="input-field">
                <label for="target-requireEnvironmentConfig">Require environment config</label>
                <div class="input-value">
                    <input id="target-requireEnvironmentConfig" type="checkbox" name="requireEnvironmentConfig" @Model.DeploymentTarget.RequireEnvironmentConfiguration.Checked() />
                </div>
            </div>

        </fieldset>

        <fieldset>
            <legend>Submit</legend>
            <div class="input-field">
                <input type="submit" value="Save" />
            </div>
        </fieldset>

    </form>
}