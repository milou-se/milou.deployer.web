@using Milou.Deployer.Web.Core.Deployment
@using Milou.Deployer.Web.Core.Extensions
@using Milou.Deployer.Web.IisHost.Areas.Application
@using Milou.Deployer.Web.IisHost.Areas.Deployment.Controllers
@using Milou.Deployer.Web.IisHost.Areas.Targets.Controllers
@model Milou.Deployer.Web.IisHost.Areas.Deployment.ViewOutputModels.MonitoringViewOutputModel

<h2>Deployed monitored applications</h2>

<table>
    <thead>
        <tr>
            <th>Target</th>
            <th>URL</th>
            <th>History</th>
            <th>Message</th>
            <th><span style="white-space: nowrap">Semantic version</span></th>
            <th>Deployed</th>
            <th><span style="white-space: nowrap">Timestamp (UTC)</span></th>
            <th><span style="white-space: nowrap">Environment type</span></th>
            <th>Metadata</th>
            <th>Deploy</th>
        </tr>
    </thead>
    <tbody>
        @foreach (AppVersion item in Model.AppVersions)
        {
            <tr>
                <td>
                    <a href="@Url.RouteUrl(TargetConstants.EditTargetRouteName, new {targetId=item.Target.Id})">@item.Target.Name</a>
                </td>
                <td>
                    @if (item.Target.Url.HasValue())
                    {
                        <a href="@item.Target.Url">@item.Target.Name</a>
                    }
                </td>
                <td><a href="@Url.RouteUrl(DeploymentConstants.HistoryRouteName, new {deploymentTargetId=item.Target.Id})">History</a></td>
                <td>@item.Message</td>
                <td>
                    <span class="@item.PreReleaseClass">@(item.SemanticVersion?.ToNormalizedString() ?? "N/A")</span>
                </td>
                <td class="trafic-light @item.DeployedSince">@item.DeployedRelative</td>
                <td>@(item.DateployedAtUtc?.ToString("yyyy-MM-dd HH:mm:ss"))</td>
                <td>@item.Target.EnvironmentType</td>
                <td>
                    @if (item.Target.Url.HasValue())
                    {
                        <a href="@(item.Target.Url)applicationmetadata.json" target="_blank">Metadata</a>
                    }
                    else
                    {
                        <text>N/A</text>
                    }
                </td>
                <td>

                    @if (item.AvailablePackageVersions.Any() && !item.Target.IsReadOnly)
                    {
                        <form method="POST" action="~/Deploy">
                            <input type="hidden" name="targetId" value="@item.Target.Id" />
                            <input type="hidden" name="current-version-major" value="@(item.SemanticVersion?.Major)" disabled="disabled" />
                            <input type="hidden" name="current-version-minor" value="@(item.SemanticVersion?.Minor)" disabled="disabled" />
                            <input type="hidden" name="current-version-patch" value="@(item.SemanticVersion?.Patch)" disabled="disabled" />
                            <input type="hidden" name="current-version-isPreRelease" value="@(item.SemanticVersion != null && item.SemanticVersion.IsPrerelease ? "true" : string.Empty)" disabled="disabled" />

                            <select name="packageVersion" id="packageVersion">

                                @foreach (var group in item.AvailablePackageVersions.GroupBy(p => p.PackageId).OrderBy(g => g.Key))
                                {
                                    <optgroup label="@group.Key">
                                        @foreach (PackageVersion allowPackageVersion in group.OrderByDescending(p => p.Version))
                                        {
                                            <option @Html.Raw(item.SemanticVersion != null && item.SemanticVersion == allowPackageVersion.Version ? "\"selected\"=\"selected\"" : string.Empty) value="@allowPackageVersion.PackageId @allowPackageVersion.Version.ToNormalizedString()" data-version-major="@allowPackageVersion.Version.Major" data-version-minor="@allowPackageVersion.Version.Minor" data-version-patch="@allowPackageVersion.Version.Patch" data-version-isPreRelease="@(allowPackageVersion.Version.IsPrerelease ? "true" : string.Empty)">@allowPackageVersion.PackageId @allowPackageVersion.Version.ToNormalizedString()</option>
                                        }
                                    </optgroup>
                                }

                            </select>

                            <input type="submit" value="Deploy" class="deploy-button" />

                        </form>
                    }

                </td>
            </tr>
        }

    </tbody>
</table>